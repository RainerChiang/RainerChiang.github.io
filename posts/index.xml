<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rainer Chiang</title>
    <link>https://RainerChiang.github.io/posts/</link>
    <description>Recent content in Posts on Rainer Chiang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 02 Jul 2022 17:26:29 +0800</lastBuildDate><atom:link href="https://RainerChiang.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>哪里来得陌生银行卡？</title>
      <link>https://RainerChiang.github.io/posts/%E5%93%AA%E9%87%8C%E6%9D%A5%E5%BE%97%E9%99%8C%E7%94%9F%E9%93%B6%E8%A1%8C%E5%8D%A1/</link>
      <pubDate>Sat, 02 Jul 2022 17:26:29 +0800</pubDate>
      
      <guid>https://RainerChiang.github.io/posts/%E5%93%AA%E9%87%8C%E6%9D%A5%E5%BE%97%E9%99%8C%E7%94%9F%E9%93%B6%E8%A1%8C%E5%8D%A1/</guid>
      <description>不久前，使用云闪付提供的「一键查卡」功能，发现多了一张民生银行的借记卡，而我很确信从来没有办理过民生银行的卡。幸运的是，花费一番功夫后，最终成功查到这张银行卡的来源信息。
一键查卡 首先，如何查询个人名下的银行卡呢？
 打开云闪付APP，点击首页的「一键查卡」功能，或者从搜索框中输入「一键查卡」 点击「新建查询」按钮，并将所有银行选中，点击「申请查询」  查询结果需要等待几分钟，通常会有短信提示  「一键查卡」功能目前能查询到 24 家银行旗下的信用卡和借记卡。查询结果显示，有一张属于我的民生银行的借记卡。
哪里来的银行卡？ 获取卡号 要调查这张银行卡的来源，首先要知道它的卡号，但是从上述查询结果中并不能获取到完整的银行卡号。
没关系，云闪付的银行卡管理页面还提供了「免输卡号，一键绑卡」功能，只需提供身份证号码和在银行预留的电话号码，选择相应银行，即可绑定对应银行的借记卡和信用卡。然后进入银行卡管理界面，点击相应的银行卡，可以看到一项新近推出的功能——查看卡号（查看卡号，需要人脸识别验证）。
尴尬地是，在我当时调查的时候尚无此项功能。那我是怎么得到这张民生银行卡的卡号的呢？很简单，向这张银行卡发起转账！既然已经成功绑定了这张银行卡，那就可以直接向它转账。
我向此银行卡转账 2 块，但很奇怪，竟然转账失败。不过无论转账成功与否，在此次转账的详情页面，都可以查看到收款卡号。至此，成功获取到了这张陌生银行卡的卡号。
民生直销银行账户 到这里，在云闪付中已经不能获取到更进一步的信息，遂下载民生银行 APP，在官方移动客户端中绑定银行卡，看能否获取更多信息。
但令人意外的是，在民生银行 APP 绑定此张银行卡总是失败，提示 “卡片状态异常，请更换卡片”。调查在此陷入僵局！
我开始通过搜索引擎查找民生银行的相关信息，终于有了新的发现——「民生银行直销银行」。
以下内容摘自百度百科1：
 2014年2月28日，民生银行直销银行正式上线。民生银行直销银行突破了传统实体网点经营模式，主要通过互联网渠道拓展客户，具有客群清晰、产品简单、渠道便捷等特点。
 此外，在搜索结果中还看到有网站提到 「民生银行直销银行电子账户」不能进行转账，这就和我前面提到的向这张陌生银行卡转账失败对应上了。
民生银行直销银行官网介绍它有手机客户端和微信公众号等渠道，简单起见，先通过其公众号「民生银行直销银行」进行调查。
 点击「登录-&amp;gt;忘记密码」提示需要在 APP 客户端操作 点击登录按钮下的「快速开户」功能，选择 Ⅱ 类账户，输入电话号码，获取到验证码并输入，点击下一步。此时，弹出提示框：  互联网金融的坑 至此，真相大白，原来是之前使用小米金融服务的时候，顺带给我开通了民生银行直销银行电子账户。而我早已忘记当时使用小米金融服务的时候，是否仔细阅读了其《用户须知》之类的文件，大概率是懒得看的。
互联网金融曾经有过一段高光的时刻，被视为金融创新、经济的新增长点。但是从 P2P 的一地鸡毛到蚂蚁金服的中止上市，大家才发现这些互联网金融创新只是披着科技金融外皮的高利贷而已。
用户在使用他们所提供的服务时，必须同意《用户须知》和《隐私政策》等协议，而用户通常都不会去看这些冗长而又重要的文件内容，说不准这些互联网金融公司就在协议中埋下了一些坑。
在此，建议读者也使用云闪付的「一键查卡」功能，看看自己是否有陌生银行卡。
  百度百科：民生银行直销银行&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
    <item>
      <title>Set Up Static ARP Table Entry</title>
      <link>https://RainerChiang.github.io/posts/set-up-static-arp-table-entry/</link>
      <pubDate>Tue, 24 May 2022 10:30:45 +0800</pubDate>
      
      <guid>https://RainerChiang.github.io/posts/set-up-static-arp-table-entry/</guid>
      <description>前不久，由于需要对局域网内的各个主机配置静态 ARP 缓存列表，重新学习了 ARP 相关知识，记录如下。
ARP 协议 简介 ARP，即 Address Resolution Protocol 地址解析协议。在给定 IP 地址时，用于解析目标主机的 MAC（Media Access Control） 物理地址，是数据链路层协议。
ARP Cache，ARP 缓存，是包含一条或者多条 IP 地址到 MAC 地址的映射表项（Table Entry）的列表，存储的是目标主机到其网络邻居的网络与物理地址映射，包括网关的地址映射信息。
ARP 工作过程 假设主机 A 和 B 在同一网段，主机 A 需要向主机 B 发送数据，则具体的地址解析过程如下：
 主机 A 首先查询自己的 ARP 缓存列表是否存在主机 B 的 IP 和 MAC地址映射。存在，则直接依据映射关系对 IP 数据包进行帧封装，并向主机 B 发送数据帧；否则，在同网段广播目标地址为主机 B 的 IP、目标 MAC 地址为全 0 的「ARP 请求」报文。 同网段的其他主机收到「ARP 请求」报文后，比对请求报文中的目标 IP 地址。和本机 IP 不同，则直接丢弃；相同，则向主机 A 发送携带自身 IP 和 MAC 地址映射关系的单播 「ARP 响应」报文。 主机 A 收到主机 B 的响应报文后，更新自己的 ARP 缓存列表，接着依据此映射关系向主机 B 发送数据帧。 根据主机 A 中配置的 ARP 表项生存时间，在生存时间计时结束后，重复上述过程。  ARP 欺骗攻击 ARP 协议是建立在网络中各个主机互相信任基础上的，网络中的主机可自主发送 ARP 响应报文，其他主机收到响应报文时不检测该报文的真实性即将其记入本机 ARP 缓存中。</description>
    </item>
    
    <item>
      <title>Valine-Admin: Manage Your Valine Comments</title>
      <link>https://RainerChiang.github.io/posts/valine-admin-manage-your-valine-comments/</link>
      <pubDate>Sat, 03 Oct 2020 11:59:19 +0800</pubDate>
      
      <guid>https://RainerChiang.github.io/posts/valine-admin-manage-your-valine-comments/</guid>
      <description>Valine Admin 新版本的 valine 评论系统取消了对邮件通知的支持，DesertsP 开发了针对 valine 的评论管理系统 Valine-Admin。
但随着 LeanCloud 控制流的改版，Valine-Admin 安装文档也有点过时了，下面是我成功安装 Valine-Admin 的过程记录，仅供参考。
LeanCloud 国际版 LeanCloud 的国际版，使用邮箱即可注册，不用实名认证。
对一个个人静态博客来说，其免费版完全够用了。
注册地址是：https://console.leancloud.app/login.html#/signup
Valine Valine 评论系统的安装和使用，请直接参考其使用文档：Valine - 一款快速、简洁且高效的无后端评论系统。
配置 Valine Admin 评论管理系统  内容参考自 Valine Admin 配置手册
 1. 配置环境变量 选择「云引擎」-&amp;gt;「设置」-&amp;gt;「自定义环境变量」，增添如下环境变量：
   变量 示例 说明     SITE_NAME Chiang&amp;rsquo;s Blog [必填]博客名称   SITE_URL https://rainerchiang.github.io [必填]首页地址   SMTP_SERVICE QQ [新版支持]邮件服务提供商，支持 QQ、163、126、Gmail 以及 更多   SMTP_USER xyz@qq.com [必填]SMTP登录用户   SMTP_PASS xyzPasswd [必填]SMTP登录密码（QQ邮箱需要获取独立密码）   SENDER_NAME Rainer Chiang [必填]发件人   SENDER_EMAIL xyz@qq.</description>
    </item>
    
    <item>
      <title>Hello Hugo</title>
      <link>https://RainerChiang.github.io/posts/hello-hugo/</link>
      <pubDate>Tue, 22 Sep 2020 11:02:37 +0800</pubDate>
      
      <guid>https://RainerChiang.github.io/posts/hello-hugo/</guid>
      <description>Hugo Theme: Simpleness Simpleness is a theme for Hugo ported from niklasbuschmann&amp;rsquo;s theme: contrast-hugo.
In addition, the hugo-theme-minos is referred to.
Live Demo  https://themes.gohugo.io/theme/simpleness/ https://rainerchiang.github.io/simpleness/ https://rainerchiang.github.io  Features  MathJax suport Google Analytics supported Comment systems include: disqus, valine1  TODO  Table of content Pagination for posts    https://valine.js.org/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
   </description>
    </item>
    
  </channel>
</rss>
